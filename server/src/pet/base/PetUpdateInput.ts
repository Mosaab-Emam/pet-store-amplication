/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CategoryWhereUniqueInput } from "../../category/base/CategoryWhereUniqueInput";
import { ValidateNested, IsOptional, IsString, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { OrderUpdateManyWithoutPetsInput } from "./OrderUpdateManyWithoutPetsInput";
import { IsJSONValue } from "@app/custom-validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { EnumPetStatus } from "./EnumPetStatus";
import { TagUpdateManyWithoutPetsInput } from "./TagUpdateManyWithoutPetsInput";

@InputType()
class PetUpdateInput {
  @ApiProperty({
    required: false,
    type: () => CategoryWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CategoryWhereUniqueInput)
  @IsOptional()
  @Field(() => CategoryWhereUniqueInput, {
    nullable: true,
  })
  categoryId?: CategoryWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: () => OrderUpdateManyWithoutPetsInput,
  })
  @ValidateNested()
  @Type(() => OrderUpdateManyWithoutPetsInput)
  @IsOptional()
  @Field(() => OrderUpdateManyWithoutPetsInput, {
    nullable: true,
  })
  orders?: OrderUpdateManyWithoutPetsInput;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  photoUrls?: InputJsonValue;

  @ApiProperty({
    required: false,
    enum: EnumPetStatus,
  })
  @IsEnum(EnumPetStatus)
  @IsOptional()
  @Field(() => EnumPetStatus, {
    nullable: true,
  })
  status?: "available" | "pending" | "sold" | null;

  @ApiProperty({
    required: false,
    type: () => TagUpdateManyWithoutPetsInput,
  })
  @ValidateNested()
  @Type(() => TagUpdateManyWithoutPetsInput)
  @IsOptional()
  @Field(() => TagUpdateManyWithoutPetsInput, {
    nullable: true,
  })
  tags?: TagUpdateManyWithoutPetsInput;
}

export { PetUpdateInput as PetUpdateInput };
